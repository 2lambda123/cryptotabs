#
# Copyright (c) 2014 OneHealth Solutions, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
require_relative '../../../kitchen/data/serverspec_helper'

describe 'apache2::default' do

  describe package(property[:apache][:package]) do
    it { should be_installed }
  end

  describe service(property[:apache][:service_name]) do
    it { should be_enabled   }
    it { should be_running   }
  end

  describe file(property[:apache][:dir]) do
    it { should be_directory }
    it { should be_mode 755 }
  end

  # conf-enabled conf-available
  %w(conf.d sites-enabled sites-available mods-enabled mods-available).each do |dir|
    describe file("#{property[:apache][:dir]}/#{dir}") do
      it { should be_directory }
      it { should be_mode 755 }
    end
  end

  describe file(property[:apache][:log_dir]) do
    it { should be_directory }
    it { should be_mode 750 }
  end

  describe file(property[:apache][:lib_dir]) do
    it { should be_directory }
    it { should be_mode 755 }
  end

  describe file(property[:apache][:docroot_dir]) do
    it { should be_directory }
    it { should be_mode 755 }
  end

  describe file(property[:apache][:cgibin_dir]) do
    it { should be_directory }
    it { should be_mode 755 }
  end

  describe file("#{property[:apache][:dir]}/sites-available/default") do
    it { should be_file }
  end

  describe file("#{property[:apache][:dir]}/sites-enabled/000-default") do
    if property[:apache][:default_site_enabled]
      it { should be_linked_to "#{property[:apache][:dir]}/sites-available/default" }
    else
      skip('default_site_enabled is false')
    end
  end

  # a2enconf a2disconf
  %w(a2ensite a2dissite a2enmod a2dismod).each do |mod_script|
    describe file("/usr/sbin/#{mod_script}") do
      it { should be_executable }
    end
  end

  describe port(80) do
    it { should be_listening }
  end

  #  it 'listens on port 80' do
  #    apache_configured_ports.must_include(80)
  #  end
  describe file("#{property[:apache][:dir]}/ports.conf") do
    it { should contain(/^Listen .*[: ]80$/) }
  end

  #  it 'only listens on port 443 when SSL is enabled' do
  #    unless ran_recipe?('apache2::mod_ssl')
  #      apache_configured_ports.wont_include(443)
  #    end
  #  end

  # describe file("#{property[:apache][:dir]}/conf.d/security.conf") do
  #   its(:content) { should match /^ServerTokens #{Regexp.escape(property['apache']['servertokens'])} *$/ }
  # end

  Dir["#{property[:apache][:dir]}/conf.d/*.conf"].each do |f|
    describe file(f) do
      it { should_not contain 'LoadModule' }
    end
  end

  describe file(property[:apache][:conf]) do
    it { should be_file }
    it { should contain '# Generated by Chef' }
    it { should contain %Q{ServerRoot "#{property[:apache][:dir]}"} }
    it { should contain "Include #{property[:apache][:dir]}/conf.d/*.conf" }
  end
  describe command("#{property[:apache][:binary]} -t") do
    it { should return_exit_status 0 }
  end
end
